VERSION = 20;

!The maximum distance between signal ports or anchors connected via wire.
!Warning: wires much longer than 16 blocks may have visual chunk clipping glitches.
max_wire_length = 16;
max_probe_lenght = 8;

PRE_INIT() {
	!gate complexity costs: gate_cost:"gateId" = [basic, advanced]#;
	Loc c = gate_cost;
	Loc base = [1, 0]#, base2 = [2, 0]#, adv = [0, 1]#, adv2 = [0, 2]#;
	!variables & IO tab:
	c:"in" = base;
	c:"out" = base;
	c:"read" = base;
	c:"write" = base2;
	c:"i_cst" = base;
	!logic tab:
	c:"not" = base;
	c:"or" = base2;
	c:"nor" = base2;
	c:"and" = base2;
	c:"nand" = base2;
	c:"xor" = [3, 0]#;
	c:"xnor" = [3, 0]#;
	!comparator tab:
	c:"not0" = base;
	c:"is0" = base;
	c:"psgn" = base;
	c:"nsgn" = base;
	c:"eq" = adv;
	c:"neq" = adv;
	c:"ls" = adv;
	c:"geq" = adv;
	!arithmetic tab:
	c:"inc" = adv;
	c:"dec" = adv;
	c:"neg" = adv;
	c:"abs" = [1, 1]#;
	c:"add" = adv2;
	c:"sub" = adv2;
	c:"mul" = [0, 3]#;
	c:"div" = [0, 4]#;
	c:"mod" = [0, 4]#;
	c:"max" = [2, 1]#;
	c:"min" = [2, 1]#;
}

INIT() {
	!crafting recipes
	Loc slab = it("minecraft:stone_slab");
	add("shaped", it("tile.editor"), "0/1/2", it("item.wire"), it("minecraft:crafting_table"), it("minecraft:bookshelf"));
	add("shaped", 2 * it("tile.rs_port"):0, "0/1", "dustRedstone", slab);
	add("shaped", 2 * it("tile.rs_port"):1, "0/1", it("minecraft:redstone_torch"), slab);
	add("shaped", 8 * it("tile.wire_anchor"), "0/0", it("minecraft:iron_bars"));
	add("shaped", it("tile.splitter"), " 0 /010/ 0 ", it("tile.rs_port"):0, it("tile.rs_port"):1);
	add("shaped", it("tile.analog_comb"), " 0 /010/ 0 ", it("tile.rs_port"):1, it("tile.rs_port"):0);
	add("shaped", it("tile.logic_comb"), "020/212/020", it("tile.rs_port"):1, it("tile.rs_port"):0, it("minecraft:redstone_torch"));
	add("shaped", it("tile.num_comb"), "020/313/020", it("tile.rs_port"):1, it("tile.rs_port"):0, "gemQuartz", "dustRedstone");
	add("shaped", it("tile.bin_comb"), "020/212/020", it("tile.rs_port"):0, it("tile.rs_port"):1, it("item.wire"));
	add("shaped", it("tile.bin_split"), "020/212/020", it("tile.rs_port"):1, it("tile.rs_port"):0, it("item.wire"));
	add("shaped", it("tile.comparator"), "231/ 0 ", it("tile.rs_port"):0, it("tile.rs_port"):1, it("item.block_wire"), it("minecraft:comparator"));
	add("shaped", it("tile.fluid_reader"), "0/1", it("tile.comparator"), it("minecraft:bucket"));
	add("shaped", it("tile.item_reader"), "0/1", it("tile.comparator"), it("minecraft:chest"));
	add("shaped", 8 * it("item.wire"), "010", "dustRedstone", it("minecraft:string"));
	add("shaped", it("item.wireless"), "000/010/000", it("item.wire"), "enderpearl");
	add("shaped", it("item.constant"), "0/1", it("item.wire"), "gemLapis");
	add("shaped", it("item.lamp"), "0/1", it("item.wire"), "dustGlowstone");
	add("shaped", it("item.tag"), "0/1", it("item.wire"), it("minecraft:name_tag"));
	add("shaped", 4 * it("item.block_wire"), "10 /020/ 01", it("item.wire"), "gemQuartz", "gemLapis");
	add("shaped", it("item.clock"), "0/1", it("item.wire"), it("minecraft:clock"));
	Loc tag = nbt(); tag:"Istats" = [24, 16, 12, 0]#; !prototype processor
	add("shaped", it("tile.processor") + tag, "021/031/021", it("tile.rs_port"):0, it("tile.rs_port"):1, slab:7, "blockRedstone");
	tag = nbt(); tag:"Istats" = [0, 0, 0, 64]#; !empty processor
	add("shaped", it("tile.processor") + tag, "0 1/0 1/0 1", it("tile.rs_port"):0, it("tile.rs_port"):1);
	moddedRecipes();
}

moddedRecipes() {
	Loc noRcp = true; !energy_reader recipe
	for (item : [it("ic2:meter"), it("immersiveengineering:tool"):2, it("thermalfoundation:meter"), it("opencomputers:tool")]) {
		if (item) {
			add("shaped", it("tile.energy_reader"), "0/1", it("tile.comparator"), item);
			noRcp = false;
		}
	}
	if (noRcp) {add("shaped", it("tile.energy_reader"), "0/1", it("tile.comparator"), it("minecraft:compass"));}
	
	if (hasmod("immersiveengineering")) {
		add("shaped", it("tile.comparator"), "0/1", it("immersiveengineering:connector"):13, it("minecraft:stone_slab"));
		add("shapeless", 8 * it("item.wire"), it("immersiveengineering:wirecoil"):5);
	}
	if (hasmod("appliedenergistics2")) {
		add("shapeless", 4 * it("tile.wire_anchor"), it("appliedenergistics2:part"):120);
		add("shaped", it("item.tag"), "0/1/2", it("appliedenergistics2:material"):21, it("minecraft:paper"), it("item.wire"));
	}
	if (hasmod("opencomputers")) {
		Loc tag = nbt(); tag:"Istats" = [32, 32, 24, 0]#; !advanced prototype processor
		add("shaped", it("tile.processor") + tag, "0 1/021/0 1", it("tile.rs_port"):0, it("tile.rs_port"):1, it("opencomputers:component"):0);
	}
}